//Generated by CharTableConverter
//!!DO NOT EDIT
package org.freehep.graphics2d.font;

import java.util.Hashtable;

/**
 * Generated MAC Latin Encoding Table.
 *
 * @author org.freehep.graphics2d.font.CharTableConverter
 * @version $Id: MACLatin.java,v 1.4 2009-06-22 02:18:16 hohenwarter Exp $
 */
public class MACLatin extends AbstractCharTable {
	private final Hashtable<Character, String> unicodeToName = new Hashtable<>();
	private final Hashtable<String, Character> nameToUnicode = new Hashtable<>();
	private final Hashtable<String, Integer> nameToEnc = new Hashtable<>();
	private final String[] encToName = new String[256];

	public MACLatin() {

		unicodeToName.put((char) 0x0041, "A");
		nameToUnicode.put("A", (char) 0x0041);
		nameToEnc.put("A", 65);
		encToName[65] = "A";

		unicodeToName.put((char) 0x00c6, "AE");
		nameToUnicode.put("AE", (char) 0x00c6);
		nameToEnc.put("AE", 174);
		encToName[174] = "AE";

		unicodeToName.put((char) 0x00c1, "Aacute");
		nameToUnicode.put("Aacute", (char) 0x00c1);
		nameToEnc.put("Aacute", 231);
		encToName[231] = "Aacute";

		unicodeToName.put((char) 0x00c2, "Acircumflex");
		nameToUnicode.put("Acircumflex", (char) 0x00c2);
		nameToEnc.put("Acircumflex", 229);
		encToName[229] = "Acircumflex";

		unicodeToName.put((char) 0x00c4, "Adieresis");
		nameToUnicode.put("Adieresis", (char) 0x00c4);
		nameToEnc.put("Adieresis", 128);
		encToName[128] = "Adieresis";

		unicodeToName.put((char) 0x00c0, "Agrave");
		nameToUnicode.put("Agrave", (char) 0x00c0);
		nameToEnc.put("Agrave", 203);
		encToName[203] = "Agrave";

		unicodeToName.put((char) 0x00c5, "Aring");
		nameToUnicode.put("Aring", (char) 0x00c5);
		nameToEnc.put("Aring", 129);
		encToName[129] = "Aring";

		unicodeToName.put((char) 0x00c3, "Atilde");
		nameToUnicode.put("Atilde", (char) 0x00c3);
		nameToEnc.put("Atilde", 204);
		encToName[204] = "Atilde";

		unicodeToName.put((char) 0x0042, "B");
		nameToUnicode.put("B", (char) 0x0042);
		nameToEnc.put("B", 66);
		encToName[66] = "B";

		unicodeToName.put((char) 0x0043, "C");
		nameToUnicode.put("C", (char) 0x0043);
		nameToEnc.put("C", 67);
		encToName[67] = "C";

		unicodeToName.put((char) 0x00c7, "Ccedilla");
		nameToUnicode.put("Ccedilla", (char) 0x00c7);
		nameToEnc.put("Ccedilla", 130);
		encToName[130] = "Ccedilla";

		unicodeToName.put((char) 0x0044, "D");
		nameToUnicode.put("D", (char) 0x0044);
		nameToEnc.put("D", 68);
		encToName[68] = "D";

		unicodeToName.put((char) 0x0045, "E");
		nameToUnicode.put("E", (char) 0x0045);
		nameToEnc.put("E", 69);
		encToName[69] = "E";

		unicodeToName.put((char) 0x00c9, "Eacute");
		nameToUnicode.put("Eacute", (char) 0x00c9);
		nameToEnc.put("Eacute", 131);
		encToName[131] = "Eacute";

		unicodeToName.put((char) 0x00ca, "Ecircumflex");
		nameToUnicode.put("Ecircumflex", (char) 0x00ca);
		nameToEnc.put("Ecircumflex", 230);
		encToName[230] = "Ecircumflex";

		unicodeToName.put((char) 0x00cb, "Edieresis");
		nameToUnicode.put("Edieresis", (char) 0x00cb);
		nameToEnc.put("Edieresis", 232);
		encToName[232] = "Edieresis";

		unicodeToName.put((char) 0x00c8, "Egrave");
		nameToUnicode.put("Egrave", (char) 0x00c8);
		nameToEnc.put("Egrave", 233);
		encToName[233] = "Egrave";

		unicodeToName.put((char) 0x00d0, "Eth");
		nameToUnicode.put("Eth", (char) 0x00d0);

		unicodeToName.put((char) 0x20ac, "Euro");
		nameToUnicode.put("Euro", (char) 0x20ac);

		unicodeToName.put((char) 0x0046, "F");
		nameToUnicode.put("F", (char) 0x0046);
		nameToEnc.put("F", 70);
		encToName[70] = "F";

		unicodeToName.put((char) 0x0047, "G");
		nameToUnicode.put("G", (char) 0x0047);
		nameToEnc.put("G", 71);
		encToName[71] = "G";

		unicodeToName.put((char) 0x0048, "H");
		nameToUnicode.put("H", (char) 0x0048);
		nameToEnc.put("H", 72);
		encToName[72] = "H";

		unicodeToName.put((char) 0x0049, "I");
		nameToUnicode.put("I", (char) 0x0049);
		nameToEnc.put("I", 73);
		encToName[73] = "I";

		unicodeToName.put((char) 0x00cd, "Iacute");
		nameToUnicode.put("Iacute", (char) 0x00cd);
		nameToEnc.put("Iacute", 234);
		encToName[234] = "Iacute";

		unicodeToName.put((char) 0x00ce, "Icircumflex");
		nameToUnicode.put("Icircumflex", (char) 0x00ce);
		nameToEnc.put("Icircumflex", 235);
		encToName[235] = "Icircumflex";

		unicodeToName.put((char) 0x00cf, "Idieresis");
		nameToUnicode.put("Idieresis", (char) 0x00cf);
		nameToEnc.put("Idieresis", 236);
		encToName[236] = "Idieresis";

		unicodeToName.put((char) 0x00cc, "Igrave");
		nameToUnicode.put("Igrave", (char) 0x00cc);
		nameToEnc.put("Igrave", 237);
		encToName[237] = "Igrave";

		unicodeToName.put((char) 0x004a, "J");
		nameToUnicode.put("J", (char) 0x004a);
		nameToEnc.put("J", 74);
		encToName[74] = "J";

		unicodeToName.put((char) 0x004b, "K");
		nameToUnicode.put("K", (char) 0x004b);
		nameToEnc.put("K", 75);
		encToName[75] = "K";

		unicodeToName.put((char) 0x004c, "L");
		nameToUnicode.put("L", (char) 0x004c);
		nameToEnc.put("L", 76);
		encToName[76] = "L";

		unicodeToName.put((char) 0x0141, "Lslash");
		nameToUnicode.put("Lslash", (char) 0x0141);

		unicodeToName.put((char) 0x004d, "M");
		nameToUnicode.put("M", (char) 0x004d);
		nameToEnc.put("M", 77);
		encToName[77] = "M";

		unicodeToName.put((char) 0x004e, "N");
		nameToUnicode.put("N", (char) 0x004e);
		nameToEnc.put("N", 78);
		encToName[78] = "N";

		unicodeToName.put((char) 0x00d1, "Ntilde");
		nameToUnicode.put("Ntilde", (char) 0x00d1);
		nameToEnc.put("Ntilde", 132);
		encToName[132] = "Ntilde";

		unicodeToName.put((char) 0x004f, "O");
		nameToUnicode.put("O", (char) 0x004f);
		nameToEnc.put("O", 79);
		encToName[79] = "O";

		unicodeToName.put((char) 0x0152, "OE");
		nameToUnicode.put("OE", (char) 0x0152);
		nameToEnc.put("OE", 206);
		encToName[206] = "OE";

		unicodeToName.put((char) 0x00d2, "Oacute");
		nameToUnicode.put("Oacute", (char) 0x00d2);
		nameToEnc.put("Oacute", 238);
		encToName[238] = "Oacute";

		unicodeToName.put((char) 0x00d4, "Ocircumflex");
		nameToUnicode.put("Ocircumflex", (char) 0x00d4);
		nameToEnc.put("Ocircumflex", 239);
		encToName[239] = "Ocircumflex";

		unicodeToName.put((char) 0x00d6, "Odieresis");
		nameToUnicode.put("Odieresis", (char) 0x00d6);
		nameToEnc.put("Odieresis", 133);
		encToName[133] = "Odieresis";

		unicodeToName.put((char) 0x00d3, "Ograve");
		nameToUnicode.put("Ograve", (char) 0x00d3);
		nameToEnc.put("Ograve", 241);
		encToName[241] = "Ograve";

		unicodeToName.put((char) 0x00d8, "Oslash");
		nameToUnicode.put("Oslash", (char) 0x00d8);
		nameToEnc.put("Oslash", 175);
		encToName[175] = "Oslash";

		unicodeToName.put((char) 0x00d5, "Otilde");
		nameToUnicode.put("Otilde", (char) 0x00d5);
		nameToEnc.put("Otilde", 205);
		encToName[205] = "Otilde";

		unicodeToName.put((char) 0x0050, "P");
		nameToUnicode.put("P", (char) 0x0050);
		nameToEnc.put("P", 80);
		encToName[80] = "P";

		unicodeToName.put((char) 0x0051, "Q");
		nameToUnicode.put("Q", (char) 0x0051);
		nameToEnc.put("Q", 81);
		encToName[81] = "Q";

		unicodeToName.put((char) 0x0052, "R");
		nameToUnicode.put("R", (char) 0x0052);
		nameToEnc.put("R", 82);
		encToName[82] = "R";

		unicodeToName.put((char) 0x0053, "S");
		nameToUnicode.put("S", (char) 0x0053);
		nameToEnc.put("S", 83);
		encToName[83] = "S";

		unicodeToName.put((char) 0x0160, "Scaron");
		nameToUnicode.put("Scaron", (char) 0x0160);

		unicodeToName.put((char) 0x0054, "T");
		nameToUnicode.put("T", (char) 0x0054);
		nameToEnc.put("T", 84);
		encToName[84] = "T";

		unicodeToName.put((char) 0x00de, "Thorn");
		nameToUnicode.put("Thorn", (char) 0x00de);

		unicodeToName.put((char) 0x0055, "U");
		nameToUnicode.put("U", (char) 0x0055);
		nameToEnc.put("U", 85);
		encToName[85] = "U";

		unicodeToName.put((char) 0x00da, "Uacute");
		nameToUnicode.put("Uacute", (char) 0x00da);
		nameToEnc.put("Uacute", 242);
		encToName[242] = "Uacute";

		unicodeToName.put((char) 0x00db, "Ucircumflex");
		nameToUnicode.put("Ucircumflex", (char) 0x00db);
		nameToEnc.put("Ucircumflex", 243);
		encToName[243] = "Ucircumflex";

		unicodeToName.put((char) 0x00dc, "Udieresis");
		nameToUnicode.put("Udieresis", (char) 0x00dc);
		nameToEnc.put("Udieresis", 134);
		encToName[134] = "Udieresis";

		unicodeToName.put((char) 0x00d9, "Ugrave");
		nameToUnicode.put("Ugrave", (char) 0x00d9);
		nameToEnc.put("Ugrave", 244);
		encToName[244] = "Ugrave";

		unicodeToName.put((char) 0x0056, "V");
		nameToUnicode.put("V", (char) 0x0056);
		nameToEnc.put("V", 86);
		encToName[86] = "V";

		unicodeToName.put((char) 0x0057, "W");
		nameToUnicode.put("W", (char) 0x0057);
		nameToEnc.put("W", 87);
		encToName[87] = "W";

		unicodeToName.put((char) 0x0058, "X");
		nameToUnicode.put("X", (char) 0x0058);
		nameToEnc.put("X", 88);
		encToName[88] = "X";

		unicodeToName.put((char) 0x0059, "Y");
		nameToUnicode.put("Y", (char) 0x0059);
		nameToEnc.put("Y", 89);
		encToName[89] = "Y";

		unicodeToName.put((char) 0x00dd, "Yacute");
		nameToUnicode.put("Yacute", (char) 0x00dd);

		unicodeToName.put((char) 0x0178, "Ydieresis");
		nameToUnicode.put("Ydieresis", (char) 0x0178);
		nameToEnc.put("Ydieresis", 217);
		encToName[217] = "Ydieresis";

		unicodeToName.put((char) 0x005a, "Z");
		nameToUnicode.put("Z", (char) 0x005a);
		nameToEnc.put("Z", 90);
		encToName[90] = "Z";

		unicodeToName.put((char) 0x017d, "Zcaron");
		nameToUnicode.put("Zcaron", (char) 0x017d);

		unicodeToName.put((char) 0x0061, "a");
		nameToUnicode.put("a", (char) 0x0061);
		nameToEnc.put("a", 97);
		encToName[97] = "a";

		unicodeToName.put((char) 0x00e1, "aacute");
		nameToUnicode.put("aacute", (char) 0x00e1);
		nameToEnc.put("aacute", 135);
		encToName[135] = "aacute";

		unicodeToName.put((char) 0x00e2, "acircumflex");
		nameToUnicode.put("acircumflex", (char) 0x00e2);
		nameToEnc.put("acircumflex", 137);
		encToName[137] = "acircumflex";

		unicodeToName.put((char) 0x00b4, "acute");
		nameToUnicode.put("acute", (char) 0x00b4);
		nameToEnc.put("acute", 171);
		encToName[171] = "acute";

		unicodeToName.put((char) 0x00e4, "adieresis");
		nameToUnicode.put("adieresis", (char) 0x00e4);
		nameToEnc.put("adieresis", 138);
		encToName[138] = "adieresis";

		unicodeToName.put((char) 0x00e6, "ae");
		nameToUnicode.put("ae", (char) 0x00e6);
		nameToEnc.put("ae", 190);
		encToName[190] = "ae";

		unicodeToName.put((char) 0x00e0, "agrave");
		nameToUnicode.put("agrave", (char) 0x00e0);
		nameToEnc.put("agrave", 136);
		encToName[136] = "agrave";

		unicodeToName.put((char) 0x0026, "ampersand");
		nameToUnicode.put("ampersand", (char) 0x0026);
		nameToEnc.put("ampersand", 38);
		encToName[38] = "ampersand";

		unicodeToName.put((char) 0x00e5, "aring");
		nameToUnicode.put("aring", (char) 0x00e5);
		nameToEnc.put("aring", 140);
		encToName[140] = "aring";

		unicodeToName.put((char) 0x005e, "asciicircum");
		nameToUnicode.put("asciicircum", (char) 0x005e);
		nameToEnc.put("asciicircum", 94);
		encToName[94] = "asciicircum";

		unicodeToName.put((char) 0x007e, "asciitilde");
		nameToUnicode.put("asciitilde", (char) 0x007e);
		nameToEnc.put("asciitilde", 126);
		encToName[126] = "asciitilde";

		unicodeToName.put((char) 0x002a, "asterisk");
		nameToUnicode.put("asterisk", (char) 0x002a);
		nameToEnc.put("asterisk", 42);
		encToName[42] = "asterisk";

		unicodeToName.put((char) 0x0040, "at");
		nameToUnicode.put("at", (char) 0x0040);
		nameToEnc.put("at", 64);
		encToName[64] = "at";

		unicodeToName.put((char) 0x00e3, "atilde");
		nameToUnicode.put("atilde", (char) 0x00e3);
		nameToEnc.put("atilde", 139);
		encToName[139] = "atilde";

		unicodeToName.put((char) 0x0062, "b");
		nameToUnicode.put("b", (char) 0x0062);
		nameToEnc.put("b", 98);
		encToName[98] = "b";

		unicodeToName.put((char) 0x005c, "backslash");
		nameToUnicode.put("backslash", (char) 0x005c);
		nameToEnc.put("backslash", 92);
		encToName[92] = "backslash";

		unicodeToName.put((char) 0x007c, "bar");
		nameToUnicode.put("bar", (char) 0x007c);
		nameToEnc.put("bar", 124);
		encToName[124] = "bar";

		unicodeToName.put((char) 0x007b, "braceleft");
		nameToUnicode.put("braceleft", (char) 0x007b);
		nameToEnc.put("braceleft", 123);
		encToName[123] = "braceleft";

		unicodeToName.put((char) 0x007d, "braceright");
		nameToUnicode.put("braceright", (char) 0x007d);
		nameToEnc.put("braceright", 125);
		encToName[125] = "braceright";

		unicodeToName.put((char) 0x005b, "bracketleft");
		nameToUnicode.put("bracketleft", (char) 0x005b);
		nameToEnc.put("bracketleft", 91);
		encToName[91] = "bracketleft";

		unicodeToName.put((char) 0x005d, "bracketright");
		nameToUnicode.put("bracketright", (char) 0x005d);
		nameToEnc.put("bracketright", 93);
		encToName[93] = "bracketright";

		unicodeToName.put((char) 0x02d8, "breve");
		nameToUnicode.put("breve", (char) 0x02d8);
		nameToEnc.put("breve", 249);
		encToName[249] = "breve";

		unicodeToName.put((char) 0x00a6, "brokenbar");
		nameToUnicode.put("brokenbar", (char) 0x00a6);

		unicodeToName.put((char) 0x2022, "bullet");
		nameToUnicode.put("bullet", (char) 0x2022);
		nameToEnc.put("bullet", 165);
		encToName[165] = "bullet";

		unicodeToName.put((char) 0x0063, "c");
		nameToUnicode.put("c", (char) 0x0063);
		nameToEnc.put("c", 99);
		encToName[99] = "c";

		unicodeToName.put((char) 0x02c7, "caron");
		nameToUnicode.put("caron", (char) 0x02c7);
		nameToEnc.put("caron", 255);
		encToName[255] = "caron";

		unicodeToName.put((char) 0x00e7, "ccedilla");
		nameToUnicode.put("ccedilla", (char) 0x00e7);
		nameToEnc.put("ccedilla", 141);
		encToName[141] = "ccedilla";

		unicodeToName.put((char) 0x00b8, "cedilla");
		nameToUnicode.put("cedilla", (char) 0x00b8);
		nameToEnc.put("cedilla", 252);
		encToName[252] = "cedilla";

		unicodeToName.put((char) 0x00a2, "cent");
		nameToUnicode.put("cent", (char) 0x00a2);
		nameToEnc.put("cent", 162);
		encToName[162] = "cent";

		unicodeToName.put((char) 0x02c6, "circumflex");
		nameToUnicode.put("circumflex", (char) 0x02c6);
		nameToEnc.put("circumflex", 246);
		encToName[246] = "circumflex";

		unicodeToName.put((char) 0x003a, "colon");
		nameToUnicode.put("colon", (char) 0x003a);
		nameToEnc.put("colon", 58);
		encToName[58] = "colon";

		unicodeToName.put((char) 0x002c, "comma");
		nameToUnicode.put("comma", (char) 0x002c);
		nameToEnc.put("comma", 44);
		encToName[44] = "comma";

		unicodeToName.put((char) 0x00a9, "copyright");
		nameToUnicode.put("copyright", (char) 0x00a9);
		nameToEnc.put("copyright", 169);
		encToName[169] = "copyright";

		unicodeToName.put((char) 0x00a4, "currency");
		nameToUnicode.put("currency", (char) 0x00a4);
		nameToEnc.put("currency", 219);
		encToName[219] = "currency";

		unicodeToName.put((char) 0x0064, "d");
		nameToUnicode.put("d", (char) 0x0064);
		nameToEnc.put("d", 100);
		encToName[100] = "d";

		unicodeToName.put((char) 0x2020, "dagger");
		nameToUnicode.put("dagger", (char) 0x2020);
		nameToEnc.put("dagger", 160);
		encToName[160] = "dagger";

		unicodeToName.put((char) 0x2021, "daggerdbl");
		nameToUnicode.put("daggerdbl", (char) 0x2021);
		nameToEnc.put("daggerdbl", 224);
		encToName[224] = "daggerdbl";

		unicodeToName.put((char) 0x00b0, "degree");
		nameToUnicode.put("degree", (char) 0x00b0);
		nameToEnc.put("degree", 161);
		encToName[161] = "degree";

		unicodeToName.put((char) 0x00a8, "dieresis");
		nameToUnicode.put("dieresis", (char) 0x00a8);
		nameToEnc.put("dieresis", 172);
		encToName[172] = "dieresis";

		unicodeToName.put((char) 0x00f7, "divide");
		nameToUnicode.put("divide", (char) 0x00f7);
		nameToEnc.put("divide", 214);
		encToName[214] = "divide";

		unicodeToName.put((char) 0x0024, "dollar");
		nameToUnicode.put("dollar", (char) 0x0024);
		nameToEnc.put("dollar", 36);
		encToName[36] = "dollar";

		unicodeToName.put((char) 0x02d9, "dotaccent");
		nameToUnicode.put("dotaccent", (char) 0x02d9);
		nameToEnc.put("dotaccent", 250);
		encToName[250] = "dotaccent";

		unicodeToName.put((char) 0x0131, "dotlessi");
		nameToUnicode.put("dotlessi", (char) 0x0131);
		nameToEnc.put("dotlessi", 245);
		encToName[245] = "dotlessi";

		unicodeToName.put((char) 0x0065, "e");
		nameToUnicode.put("e", (char) 0x0065);
		nameToEnc.put("e", 101);
		encToName[101] = "e";

		unicodeToName.put((char) 0x00e9, "eacute");
		nameToUnicode.put("eacute", (char) 0x00e9);
		nameToEnc.put("eacute", 142);
		encToName[142] = "eacute";

		unicodeToName.put((char) 0x00ea, "ecircumflex");
		nameToUnicode.put("ecircumflex", (char) 0x00ea);
		nameToEnc.put("ecircumflex", 144);
		encToName[144] = "ecircumflex";

		unicodeToName.put((char) 0x00eb, "edieresis");
		nameToUnicode.put("edieresis", (char) 0x00eb);
		nameToEnc.put("edieresis", 145);
		encToName[145] = "edieresis";

		unicodeToName.put((char) 0x00e8, "egrave");
		nameToUnicode.put("egrave", (char) 0x00e8);
		nameToEnc.put("egrave", 143);
		encToName[143] = "egrave";

		unicodeToName.put((char) 0x0038, "eight");
		nameToUnicode.put("eight", (char) 0x0038);
		nameToEnc.put("eight", 56);
		encToName[56] = "eight";

		unicodeToName.put((char) 0x2026, "ellipsis");
		nameToUnicode.put("ellipsis", (char) 0x2026);
		nameToEnc.put("ellipsis", 201);
		encToName[201] = "ellipsis";

		unicodeToName.put((char) 0x002d, "emdash");
		nameToUnicode.put("emdash", (char) 0x002d);
		nameToEnc.put("emdash", 209);
		encToName[209] = "emdash";

		unicodeToName.put((char) 0x002d, "endash");
		nameToUnicode.put("endash", (char) 0x002d);
		nameToEnc.put("endash", 208);
		encToName[208] = "endash";

		unicodeToName.put((char) 0x003d, "equal");
		nameToUnicode.put("equal", (char) 0x003d);
		nameToEnc.put("equal", 61);
		encToName[61] = "equal";

		unicodeToName.put((char) 0x00f0, "eth");
		nameToUnicode.put("eth", (char) 0x00f0);

		unicodeToName.put((char) 0x0021, "exclam");
		nameToUnicode.put("exclam", (char) 0x0021);
		nameToEnc.put("exclam", 33);
		encToName[33] = "exclam";

		unicodeToName.put((char) 0x00a1, "exclamdown");
		nameToUnicode.put("exclamdown", (char) 0x00a1);
		nameToEnc.put("exclamdown", 193);
		encToName[193] = "exclamdown";

		unicodeToName.put((char) 0x0066, "f");
		nameToUnicode.put("f", (char) 0x0066);
		nameToEnc.put("f", 102);
		encToName[102] = "f";

		unicodeToName.put((char) 0xfb01, "fi");
		nameToUnicode.put("fi", (char) 0xfb01);
		nameToEnc.put("fi", 222);
		encToName[222] = "fi";

		unicodeToName.put((char) 0x0035, "five");
		nameToUnicode.put("five", (char) 0x0035);
		nameToEnc.put("five", 53);
		encToName[53] = "five";

		unicodeToName.put((char) 0xfb02, "fl");
		nameToUnicode.put("fl", (char) 0xfb02);
		nameToEnc.put("fl", 223);
		encToName[223] = "fl";

		unicodeToName.put((char) 0x0192, "florin");
		nameToUnicode.put("florin", (char) 0x0192);
		nameToEnc.put("florin", 196);
		encToName[196] = "florin";

		unicodeToName.put((char) 0x0034, "four");
		nameToUnicode.put("four", (char) 0x0034);
		nameToEnc.put("four", 52);
		encToName[52] = "four";

		unicodeToName.put((char) 0x2044, "fraction");
		nameToUnicode.put("fraction", (char) 0x2044);
		nameToEnc.put("fraction", 218);
		encToName[218] = "fraction";

		unicodeToName.put((char) 0x0067, "g");
		nameToUnicode.put("g", (char) 0x0067);
		nameToEnc.put("g", 103);
		encToName[103] = "g";

		unicodeToName.put((char) 0x00df, "germandbls");
		nameToUnicode.put("germandbls", (char) 0x00df);
		nameToEnc.put("germandbls", 167);
		encToName[167] = "germandbls";

		unicodeToName.put((char) 0x0060, "grave");
		nameToUnicode.put("grave", (char) 0x0060);
		nameToEnc.put("grave", 96);
		encToName[96] = "grave";

		unicodeToName.put((char) 0x003e, "greater");
		nameToUnicode.put("greater", (char) 0x003e);
		nameToEnc.put("greater", 62);
		encToName[62] = "greater";

		unicodeToName.put((char) 0x00ab, "guillemotleft");
		nameToUnicode.put("guillemotleft", (char) 0x00ab);
		nameToEnc.put("guillemotleft", 199);
		encToName[199] = "guillemotleft";

		unicodeToName.put((char) 0x00bb, "guillemotright");
		nameToUnicode.put("guillemotright", (char) 0x00bb);
		nameToEnc.put("guillemotright", 200);
		encToName[200] = "guillemotright";

		unicodeToName.put((char) 0x2039, "guilsinglleft");
		nameToUnicode.put("guilsinglleft", (char) 0x2039);
		nameToEnc.put("guilsinglleft", 220);
		encToName[220] = "guilsinglleft";

		unicodeToName.put((char) 0x203a, "guilsinglright");
		nameToUnicode.put("guilsinglright", (char) 0x203a);
		nameToEnc.put("guilsinglright", 221);
		encToName[221] = "guilsinglright";

		unicodeToName.put((char) 0x0068, "h");
		nameToUnicode.put("h", (char) 0x0068);
		nameToEnc.put("h", 104);
		encToName[104] = "h";

		unicodeToName.put((char) 0x02ba, "hungarumlaut");
		nameToUnicode.put("hungarumlaut", (char) 0x02ba);
		nameToEnc.put("hungarumlaut", 253);
		encToName[253] = "hungarumlaut";

		unicodeToName.put((char) 0x002d, "hyphen");
		nameToUnicode.put("hyphen", (char) 0x002d);
		nameToEnc.put("hyphen", 45);
		encToName[45] = "hyphen";

		unicodeToName.put((char) 0x0069, "i");
		nameToUnicode.put("i", (char) 0x0069);
		nameToEnc.put("i", 105);
		encToName[105] = "i";

		unicodeToName.put((char) 0x00ed, "iacute");
		nameToUnicode.put("iacute", (char) 0x00ed);
		nameToEnc.put("iacute", 146);
		encToName[146] = "iacute";

		unicodeToName.put((char) 0x00ee, "icircumflex");
		nameToUnicode.put("icircumflex", (char) 0x00ee);
		nameToEnc.put("icircumflex", 148);
		encToName[148] = "icircumflex";

		unicodeToName.put((char) 0x00ef, "idieresis");
		nameToUnicode.put("idieresis", (char) 0x00ef);
		nameToEnc.put("idieresis", 149);
		encToName[149] = "idieresis";

		unicodeToName.put((char) 0x00ec, "igrave");
		nameToUnicode.put("igrave", (char) 0x00ec);
		nameToEnc.put("igrave", 147);
		encToName[147] = "igrave";

		unicodeToName.put((char) 0x006a, "j");
		nameToUnicode.put("j", (char) 0x006a);
		nameToEnc.put("j", 106);
		encToName[106] = "j";

		unicodeToName.put((char) 0x006b, "k");
		nameToUnicode.put("k", (char) 0x006b);
		nameToEnc.put("k", 107);
		encToName[107] = "k";

		unicodeToName.put((char) 0x006c, "l");
		nameToUnicode.put("l", (char) 0x006c);
		nameToEnc.put("l", 108);
		encToName[108] = "l";

		unicodeToName.put((char) 0x003c, "less");
		nameToUnicode.put("less", (char) 0x003c);
		nameToEnc.put("less", 60);
		encToName[60] = "less";

		unicodeToName.put((char) 0x00ac, "logicalnot");
		nameToUnicode.put("logicalnot", (char) 0x00ac);
		nameToEnc.put("logicalnot", 194);
		encToName[194] = "logicalnot";

		unicodeToName.put((char) 0x0142, "lslash");
		nameToUnicode.put("lslash", (char) 0x0142);

		unicodeToName.put((char) 0x006d, "m");
		nameToUnicode.put("m", (char) 0x006d);
		nameToEnc.put("m", 109);
		encToName[109] = "m";

		unicodeToName.put((char) 0x00af, "macron");
		nameToUnicode.put("macron", (char) 0x00af);
		nameToEnc.put("macron", 248);
		encToName[248] = "macron";

		unicodeToName.put((char) 0x2212, "minus");
		nameToUnicode.put("minus", (char) 0x2212);

		unicodeToName.put((char) 0x03bc, "mu");
		nameToUnicode.put("mu", (char) 0x03bc);
		nameToEnc.put("mu", 181);
		encToName[181] = "mu";

		unicodeToName.put((char) 0x00d7, "multiply");
		nameToUnicode.put("multiply", (char) 0x00d7);

		unicodeToName.put((char) 0x006e, "n");
		nameToUnicode.put("n", (char) 0x006e);
		nameToEnc.put("n", 110);
		encToName[110] = "n";

		unicodeToName.put((char) 0x0039, "nine");
		nameToUnicode.put("nine", (char) 0x0039);
		nameToEnc.put("nine", 57);
		encToName[57] = "nine";

		unicodeToName.put((char) 0x00f1, "ntilde");
		nameToUnicode.put("ntilde", (char) 0x00f1);
		nameToEnc.put("ntilde", 150);
		encToName[150] = "ntilde";

		unicodeToName.put((char) 0x0023, "numbersign");
		nameToUnicode.put("numbersign", (char) 0x0023);
		nameToEnc.put("numbersign", 35);
		encToName[35] = "numbersign";

		unicodeToName.put((char) 0x006f, "o");
		nameToUnicode.put("o", (char) 0x006f);
		nameToEnc.put("o", 111);
		encToName[111] = "o";

		unicodeToName.put((char) 0x00f3, "oacute");
		nameToUnicode.put("oacute", (char) 0x00f3);
		nameToEnc.put("oacute", 151);
		encToName[151] = "oacute";

		unicodeToName.put((char) 0x00f4, "ocircumflex");
		nameToUnicode.put("ocircumflex", (char) 0x00f4);
		nameToEnc.put("ocircumflex", 153);
		encToName[153] = "ocircumflex";

		unicodeToName.put((char) 0x00f6, "odieresis");
		nameToUnicode.put("odieresis", (char) 0x00f6);
		nameToEnc.put("odieresis", 154);
		encToName[154] = "odieresis";

		unicodeToName.put((char) 0x0153, "oe");
		nameToUnicode.put("oe", (char) 0x0153);
		nameToEnc.put("oe", 207);
		encToName[207] = "oe";

		unicodeToName.put((char) 0x02db, "ogonek");
		nameToUnicode.put("ogonek", (char) 0x02db);
		nameToEnc.put("ogonek", 254);
		encToName[254] = "ogonek";

		unicodeToName.put((char) 0x00f2, "ograve");
		nameToUnicode.put("ograve", (char) 0x00f2);
		nameToEnc.put("ograve", 152);
		encToName[152] = "ograve";

		unicodeToName.put((char) 0x0031, "one");
		nameToUnicode.put("one", (char) 0x0031);
		nameToEnc.put("one", 49);
		encToName[49] = "one";

		unicodeToName.put((char) 0x00bd, "onehalf");
		nameToUnicode.put("onehalf", (char) 0x00bd);

		unicodeToName.put((char) 0x00bc, "onequarter");
		nameToUnicode.put("onequarter", (char) 0x00bc);

		unicodeToName.put((char) 0x00b9, "onesuperior");
		nameToUnicode.put("onesuperior", (char) 0x00b9);

		unicodeToName.put((char) 0x00aa, "ordfeminine");
		nameToUnicode.put("ordfeminine", (char) 0x00aa);
		nameToEnc.put("ordfeminine", 187);
		encToName[187] = "ordfeminine";

		unicodeToName.put((char) 0x00ba, "ordmasculine");
		nameToUnicode.put("ordmasculine", (char) 0x00ba);
		nameToEnc.put("ordmasculine", 188);
		encToName[188] = "ordmasculine";

		unicodeToName.put((char) 0x00f8, "oslash");
		nameToUnicode.put("oslash", (char) 0x00f8);
		nameToEnc.put("oslash", 191);
		encToName[191] = "oslash";

		unicodeToName.put((char) 0x00f5, "otilde");
		nameToUnicode.put("otilde", (char) 0x00f5);
		nameToEnc.put("otilde", 155);
		encToName[155] = "otilde";

		unicodeToName.put((char) 0x0070, "p");
		nameToUnicode.put("p", (char) 0x0070);
		nameToEnc.put("p", 112);
		encToName[112] = "p";

		unicodeToName.put((char) 0x00b6, "paragraph");
		nameToUnicode.put("paragraph", (char) 0x00b6);
		nameToEnc.put("paragraph", 166);
		encToName[166] = "paragraph";

		unicodeToName.put((char) 0x0028, "parenleft");
		nameToUnicode.put("parenleft", (char) 0x0028);
		nameToEnc.put("parenleft", 40);
		encToName[40] = "parenleft";

		unicodeToName.put((char) 0x0029, "parenright");
		nameToUnicode.put("parenright", (char) 0x0029);
		nameToEnc.put("parenright", 41);
		encToName[41] = "parenright";

		unicodeToName.put((char) 0x0025, "percent");
		nameToUnicode.put("percent", (char) 0x0025);
		nameToEnc.put("percent", 37);
		encToName[37] = "percent";

		unicodeToName.put((char) 0x002e, "period");
		nameToUnicode.put("period", (char) 0x002e);
		nameToEnc.put("period", 46);
		encToName[46] = "period";

		unicodeToName.put((char) 0x00b7, "periodcentered");
		nameToUnicode.put("periodcentered", (char) 0x00b7);
		nameToEnc.put("periodcentered", 225);
		encToName[225] = "periodcentered";

		unicodeToName.put((char) 0x2030, "perthousand");
		nameToUnicode.put("perthousand", (char) 0x2030);
		nameToEnc.put("perthousand", 228);
		encToName[228] = "perthousand";

		unicodeToName.put((char) 0x002b, "plus");
		nameToUnicode.put("plus", (char) 0x002b);
		nameToEnc.put("plus", 43);
		encToName[43] = "plus";

		unicodeToName.put((char) 0x00b1, "plusminus");
		nameToUnicode.put("plusminus", (char) 0x00b1);
		nameToEnc.put("plusminus", 177);
		encToName[177] = "plusminus";

		unicodeToName.put((char) 0x0071, "q");
		nameToUnicode.put("q", (char) 0x0071);
		nameToEnc.put("q", 113);
		encToName[113] = "q";

		unicodeToName.put((char) 0x003f, "question");
		nameToUnicode.put("question", (char) 0x003f);
		nameToEnc.put("question", 63);
		encToName[63] = "question";

		unicodeToName.put((char) 0x00bf, "questiondown");
		nameToUnicode.put("questiondown", (char) 0x00bf);
		nameToEnc.put("questiondown", 192);
		encToName[192] = "questiondown";

		unicodeToName.put((char) 0x0022, "quotedbl");
		nameToUnicode.put("quotedbl", (char) 0x0022);
		nameToEnc.put("quotedbl", 34);
		encToName[34] = "quotedbl";

		unicodeToName.put((char) 0x201e, "quotedblbase");
		nameToUnicode.put("quotedblbase", (char) 0x201e);
		nameToEnc.put("quotedblbase", 227);
		encToName[227] = "quotedblbase";

		unicodeToName.put((char) 0x201c, "quotedblleft");
		nameToUnicode.put("quotedblleft", (char) 0x201c);
		nameToEnc.put("quotedblleft", 210);
		encToName[210] = "quotedblleft";

		unicodeToName.put((char) 0x201d, "quotedblright");
		nameToUnicode.put("quotedblright", (char) 0x201d);
		nameToEnc.put("quotedblright", 211);
		encToName[211] = "quotedblright";

		unicodeToName.put((char) 0x0060, "quoteleft");
		nameToUnicode.put("quoteleft", (char) 0x0060);
		nameToEnc.put("quoteleft", 212);
		encToName[212] = "quoteleft";

		unicodeToName.put((char) 0x0027, "quoteright");
		nameToUnicode.put("quoteright", (char) 0x0027);
		nameToEnc.put("quoteright", 213);
		encToName[213] = "quoteright";

		unicodeToName.put((char) 0x201a, "quotesinglbase");
		nameToUnicode.put("quotesinglbase", (char) 0x201a);
		nameToEnc.put("quotesinglbase", 226);
		encToName[226] = "quotesinglbase";

		unicodeToName.put((char) 0x0027, "quotesingle");
		nameToUnicode.put("quotesingle", (char) 0x0027);
		nameToEnc.put("quotesingle", 39);
		encToName[39] = "quotesingle";

		unicodeToName.put((char) 0x0072, "r");
		nameToUnicode.put("r", (char) 0x0072);
		nameToEnc.put("r", 114);
		encToName[114] = "r";

		unicodeToName.put((char) 0x00ae, "registered");
		nameToUnicode.put("registered", (char) 0x00ae);
		nameToEnc.put("registered", 168);
		encToName[168] = "registered";

		unicodeToName.put((char) 0x02da, "ring");
		nameToUnicode.put("ring", (char) 0x02da);
		nameToEnc.put("ring", 251);
		encToName[251] = "ring";

		unicodeToName.put((char) 0x0073, "s");
		nameToUnicode.put("s", (char) 0x0073);
		nameToEnc.put("s", 115);
		encToName[115] = "s";

		unicodeToName.put((char) 0x0161, "scaron");
		nameToUnicode.put("scaron", (char) 0x0161);

		unicodeToName.put((char) 0x00a7, "section");
		nameToUnicode.put("section", (char) 0x00a7);
		nameToEnc.put("section", 164);
		encToName[164] = "section";

		unicodeToName.put((char) 0x003b, "semicolon");
		nameToUnicode.put("semicolon", (char) 0x003b);
		nameToEnc.put("semicolon", 59);
		encToName[59] = "semicolon";

		unicodeToName.put((char) 0x0037, "seven");
		nameToUnicode.put("seven", (char) 0x0037);
		nameToEnc.put("seven", 55);
		encToName[55] = "seven";

		unicodeToName.put((char) 0x0036, "six");
		nameToUnicode.put("six", (char) 0x0036);
		nameToEnc.put("six", 54);
		encToName[54] = "six";

		unicodeToName.put((char) 0x002f, "slash");
		nameToUnicode.put("slash", (char) 0x002f);
		nameToEnc.put("slash", 47);
		encToName[47] = "slash";

		unicodeToName.put((char) 0x0020, "space");
		nameToUnicode.put("space", (char) 0x0020);
		nameToEnc.put("space", 32);
		encToName[32] = "space";

		unicodeToName.put((char) 0x00a3, "sterling");
		nameToUnicode.put("sterling", (char) 0x00a3);
		nameToEnc.put("sterling", 163);
		encToName[163] = "sterling";

		unicodeToName.put((char) 0x0074, "t");
		nameToUnicode.put("t", (char) 0x0074);
		nameToEnc.put("t", 116);
		encToName[116] = "t";

		unicodeToName.put((char) 0x00fe, "thorn");
		nameToUnicode.put("thorn", (char) 0x00fe);

		unicodeToName.put((char) 0x0033, "three");
		nameToUnicode.put("three", (char) 0x0033);
		nameToEnc.put("three", 51);
		encToName[51] = "three";

		unicodeToName.put((char) 0x00be, "threequarters");
		nameToUnicode.put("threequarters", (char) 0x00be);

		unicodeToName.put((char) 0x00b3, "threesuperior");
		nameToUnicode.put("threesuperior", (char) 0x00b3);

		unicodeToName.put((char) 0x02dc, "tilde");
		nameToUnicode.put("tilde", (char) 0x02dc);
		nameToEnc.put("tilde", 247);
		encToName[247] = "tilde";

		unicodeToName.put((char) 0x2122, "trademark");
		nameToUnicode.put("trademark", (char) 0x2122);
		nameToEnc.put("trademark", 170);
		encToName[170] = "trademark";

		unicodeToName.put((char) 0x0032, "two");
		nameToUnicode.put("two", (char) 0x0032);
		nameToEnc.put("two", 50);
		encToName[50] = "two";

		unicodeToName.put((char) 0x00b2, "twosuperior");
		nameToUnicode.put("twosuperior", (char) 0x00b2);

		unicodeToName.put((char) 0x0075, "u");
		nameToUnicode.put("u", (char) 0x0075);
		nameToEnc.put("u", 117);
		encToName[117] = "u";

		unicodeToName.put((char) 0x00fa, "uacute");
		nameToUnicode.put("uacute", (char) 0x00fa);
		nameToEnc.put("uacute", 156);
		encToName[156] = "uacute";

		unicodeToName.put((char) 0x00fb, "ucircumflex");
		nameToUnicode.put("ucircumflex", (char) 0x00fb);
		nameToEnc.put("ucircumflex", 158);
		encToName[158] = "ucircumflex";

		unicodeToName.put((char) 0x00fc, "udieresis");
		nameToUnicode.put("udieresis", (char) 0x00fc);
		nameToEnc.put("udieresis", 159);
		encToName[159] = "udieresis";

		unicodeToName.put((char) 0x00f9, "ugrave");
		nameToUnicode.put("ugrave", (char) 0x00f9);
		nameToEnc.put("ugrave", 157);
		encToName[157] = "ugrave";

		unicodeToName.put((char) 0x005f, "underscore");
		nameToUnicode.put("underscore", (char) 0x005f);
		nameToEnc.put("underscore", 95);
		encToName[95] = "underscore";

		unicodeToName.put((char) 0x0076, "v");
		nameToUnicode.put("v", (char) 0x0076);
		nameToEnc.put("v", 118);
		encToName[118] = "v";

		unicodeToName.put((char) 0x0077, "w");
		nameToUnicode.put("w", (char) 0x0077);
		nameToEnc.put("w", 119);
		encToName[119] = "w";

		unicodeToName.put((char) 0x0078, "x");
		nameToUnicode.put("x", (char) 0x0078);
		nameToEnc.put("x", 120);
		encToName[120] = "x";

		unicodeToName.put((char) 0x0079, "y");
		nameToUnicode.put("y", (char) 0x0079);
		nameToEnc.put("y", 121);
		encToName[121] = "y";

		unicodeToName.put((char) 0x00fd, "yacute");
		nameToUnicode.put("yacute", (char) 0x00fd);

		unicodeToName.put((char) 0x00ff, "ydieresis");
		nameToUnicode.put("ydieresis", (char) 0x00ff);
		nameToEnc.put("ydieresis", 216);
		encToName[216] = "ydieresis";

		unicodeToName.put((char) 0x00a5, "yen");
		nameToUnicode.put("yen", (char) 0x00a5);
		nameToEnc.put("yen", 180);
		encToName[180] = "yen";

		unicodeToName.put((char) 0x007a, "z");
		nameToUnicode.put("z", (char) 0x007a);
		nameToEnc.put("z", 122);
		encToName[122] = "z";

		unicodeToName.put((char) 0x017e, "zcaron");
		nameToUnicode.put("zcaron", (char) 0x017e);

		unicodeToName.put((char) 0x0030, "zero");
		nameToUnicode.put("zero", (char) 0x0030);
		nameToEnc.put("zero", 48);
		encToName[48] = "zero";

	}

	@Override
	public String toName(Character c) {
		return unicodeToName.get(c);
	}

	@Override
	public String toName(int enc) {
		if (enc != 0) {
			return encToName[enc];
		}
		return null;
	}

	@Override
	public int toEncoding(String name) {
		return nameToEnc.get(name);
	}

	@Override
	public char toUnicode(String name) {
		return nameToUnicode.get(name);
	}

	@Override
	public String getName() {
		return "Latin";
	}

	@Override
	public String getEncoding() {
		return "MAC";
	}

}
